name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better SonarCloud analysis

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Test with Gradle
        run: ./gradlew test jacocoTestReport

      - name: Build and analyze with SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    # Generate a token on SonarCloud and add it to your GitHub repository secrets
        run: ./gradlew sonar -Dsonar.projectKey=soat-fiap_food-core-api -Dsonar.organization=soat-fiap -Dsonar.host.url=https://sonarcloud.io

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: food-core-api
          path: build/libs/*.jar

  sonar-quality-gate:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: SonarQube Quality Gate Check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          scanMetadataReportFile: build/sonar/report-task.txt

  # deploy:
  #   needs: [build, sonar-quality-gate]
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #
  #   steps:
  #   - name: Download Build Artifact
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: food-core-api
  #
  #   - name: Azure Login
  #     uses: azure/login@v1
  #     with:
  #       creds: ${{ secrets.AZURE_CREDENTIALS }}
  #
  #   - name: Deploy to Azure App Service
  #     uses: azure/webapps-deploy@v2
  #     with:
  #       app-name: 'food-core-api'
  #       package: '*.jar'
  #       slot-name: 'production'
