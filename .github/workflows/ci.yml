name: CI Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Execute Spotless Apply
        run: ./gradlew spotlessApply

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Test with Gradle
        run: ./gradlew test jacocoTestReport

      - name: Build and analyze with SonarCloud
        run: |
          ./gradlew sonar \
            -Dsonar.projectKey="$SONAR_CLOUD_PROJ_KEY" \
            -Dsonar.organization="$SONAR_CLOUD_ORG_KEY" \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token="$SONAR_CLOUD_TOKEN" \
            -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml \
            -Dsonar.qualitygate.wait=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_CLOUD_ORG_KEY: ${{ secrets.SONAR_CLOUD_ORG_KEY }}
          SONAR_CLOUD_PROJ_KEY: ${{ secrets.SONAR_CLOUD_PROJ_KEY }}
          SONAR_CLOUD_TOKEN: ${{ secrets.SONAR_CLOUD_TOKEN }}
          
  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: foodcore-api-jars
          path: build/libs/*.jar